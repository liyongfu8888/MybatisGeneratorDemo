<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cyjr.dao.TbUserMapper">
  <resultMap id="BaseResultMap" type="com.cyjr.model.TbUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role" jdbcType="TINYINT" property="role" />
    <result column="user_type" jdbcType="TINYINT" property="userType" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="user_no" jdbcType="VARCHAR" property="userNo" />
    <result column="password_hash" jdbcType="VARCHAR" property="passwordHash" />
    <result column="password_pay_hash" jdbcType="VARCHAR" property="passwordPayHash" />
    <result column="password_reset_token" jdbcType="VARCHAR" property="passwordResetToken" />
    <result column="auth_key" jdbcType="VARCHAR" property="authKey" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="litpic" jdbcType="VARCHAR" property="litpic" />
    <result column="birthday" jdbcType="VARCHAR" property="birthday" />
    <result column="email_binding_status" jdbcType="TINYINT" property="emailBindingStatus" />
    <result column="mobile_binding_status" jdbcType="TINYINT" property="mobileBindingStatus" />
    <result column="real_verify_status" jdbcType="TINYINT" property="realVerifyStatus" />
    <result column="card_binding_status" jdbcType="TINYINT" property="cardBindingStatus" />
    <result column="sina_open_status" jdbcType="INTEGER" property="sinaOpenStatus" />
    <result column="card_id_base" jdbcType="INTEGER" property="cardIdBase" />
    <result column="created_at" jdbcType="INTEGER" property="createdAt" />
    <result column="last_logintime" jdbcType="INTEGER" property="lastLogintime" />
    <result column="updated_at" jdbcType="INTEGER" property="updatedAt" />
    <result column="created_ip" jdbcType="VARCHAR" property="createdIp" />
    <result column="invite_userid" jdbcType="INTEGER" property="inviteUserid" />
    <result column="real_verify_time" jdbcType="INTEGER" property="realVerifyTime" />
    <result column="jsession_id" jdbcType="VARCHAR" property="jsessionId" />
    <result column="luckydraw_login" jdbcType="INTEGER" property="luckydrawLogin" />
    <result column="luckydraw_tender" jdbcType="INTEGER" property="luckydrawTender" />
    <result column="loginTimes" jdbcType="INTEGER" property="logintimes" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, role, user_type, username, user_no, password_hash, password_pay_hash, password_reset_token, 
    auth_key, status, mobile, email, realname, id_card, sex, litpic, birthday, email_binding_status, 
    mobile_binding_status, real_verify_status, card_binding_status, sina_open_status, 
    card_id_base, created_at, last_logintime, updated_at, created_ip, invite_userid, 
    real_verify_time, jsession_id, luckydraw_login, luckydraw_tender, loginTimes
  </sql>
  <select id="selectByExample" parameterType="com.cyjr.model.TbUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cyjr.model.TbUserExample">
    delete from tb_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cyjr.model.TbUser">
    insert into tb_user (id, role, user_type, 
      username, user_no, password_hash, 
      password_pay_hash, password_reset_token, auth_key, 
      status, mobile, email, 
      realname, id_card, sex, 
      litpic, birthday, email_binding_status, 
      mobile_binding_status, real_verify_status, 
      card_binding_status, sina_open_status, card_id_base, 
      created_at, last_logintime, updated_at, 
      created_ip, invite_userid, real_verify_time, 
      jsession_id, luckydraw_login, luckydraw_tender, 
      loginTimes)
    values (#{id,jdbcType=INTEGER}, #{role,jdbcType=TINYINT}, #{userType,jdbcType=TINYINT}, 
      #{username,jdbcType=VARCHAR}, #{userNo,jdbcType=VARCHAR}, #{passwordHash,jdbcType=VARCHAR}, 
      #{passwordPayHash,jdbcType=VARCHAR}, #{passwordResetToken,jdbcType=VARCHAR}, #{authKey,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{realname,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, 
      #{litpic,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR}, #{emailBindingStatus,jdbcType=TINYINT}, 
      #{mobileBindingStatus,jdbcType=TINYINT}, #{realVerifyStatus,jdbcType=TINYINT}, 
      #{cardBindingStatus,jdbcType=TINYINT}, #{sinaOpenStatus,jdbcType=INTEGER}, #{cardIdBase,jdbcType=INTEGER}, 
      #{createdAt,jdbcType=INTEGER}, #{lastLogintime,jdbcType=INTEGER}, #{updatedAt,jdbcType=INTEGER}, 
      #{createdIp,jdbcType=VARCHAR}, #{inviteUserid,jdbcType=INTEGER}, #{realVerifyTime,jdbcType=INTEGER}, 
      #{jsessionId,jdbcType=VARCHAR}, #{luckydrawLogin,jdbcType=INTEGER}, #{luckydrawTender,jdbcType=INTEGER}, 
      #{logintimes,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cyjr.model.TbUser">
    insert into tb_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="userNo != null">
        user_no,
      </if>
      <if test="passwordHash != null">
        password_hash,
      </if>
      <if test="passwordPayHash != null">
        password_pay_hash,
      </if>
      <if test="passwordResetToken != null">
        password_reset_token,
      </if>
      <if test="authKey != null">
        auth_key,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="idCard != null">
        id_card,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="litpic != null">
        litpic,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="emailBindingStatus != null">
        email_binding_status,
      </if>
      <if test="mobileBindingStatus != null">
        mobile_binding_status,
      </if>
      <if test="realVerifyStatus != null">
        real_verify_status,
      </if>
      <if test="cardBindingStatus != null">
        card_binding_status,
      </if>
      <if test="sinaOpenStatus != null">
        sina_open_status,
      </if>
      <if test="cardIdBase != null">
        card_id_base,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="lastLogintime != null">
        last_logintime,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="createdIp != null">
        created_ip,
      </if>
      <if test="inviteUserid != null">
        invite_userid,
      </if>
      <if test="realVerifyTime != null">
        real_verify_time,
      </if>
      <if test="jsessionId != null">
        jsession_id,
      </if>
      <if test="luckydrawLogin != null">
        luckydraw_login,
      </if>
      <if test="luckydrawTender != null">
        luckydraw_tender,
      </if>
      <if test="logintimes != null">
        loginTimes,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="role != null">
        #{role,jdbcType=TINYINT},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=TINYINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="userNo != null">
        #{userNo,jdbcType=VARCHAR},
      </if>
      <if test="passwordHash != null">
        #{passwordHash,jdbcType=VARCHAR},
      </if>
      <if test="passwordPayHash != null">
        #{passwordPayHash,jdbcType=VARCHAR},
      </if>
      <if test="passwordResetToken != null">
        #{passwordResetToken,jdbcType=VARCHAR},
      </if>
      <if test="authKey != null">
        #{authKey,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="litpic != null">
        #{litpic,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="emailBindingStatus != null">
        #{emailBindingStatus,jdbcType=TINYINT},
      </if>
      <if test="mobileBindingStatus != null">
        #{mobileBindingStatus,jdbcType=TINYINT},
      </if>
      <if test="realVerifyStatus != null">
        #{realVerifyStatus,jdbcType=TINYINT},
      </if>
      <if test="cardBindingStatus != null">
        #{cardBindingStatus,jdbcType=TINYINT},
      </if>
      <if test="sinaOpenStatus != null">
        #{sinaOpenStatus,jdbcType=INTEGER},
      </if>
      <if test="cardIdBase != null">
        #{cardIdBase,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=INTEGER},
      </if>
      <if test="lastLogintime != null">
        #{lastLogintime,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=INTEGER},
      </if>
      <if test="createdIp != null">
        #{createdIp,jdbcType=VARCHAR},
      </if>
      <if test="inviteUserid != null">
        #{inviteUserid,jdbcType=INTEGER},
      </if>
      <if test="realVerifyTime != null">
        #{realVerifyTime,jdbcType=INTEGER},
      </if>
      <if test="jsessionId != null">
        #{jsessionId,jdbcType=VARCHAR},
      </if>
      <if test="luckydrawLogin != null">
        #{luckydrawLogin,jdbcType=INTEGER},
      </if>
      <if test="luckydrawTender != null">
        #{luckydrawTender,jdbcType=INTEGER},
      </if>
      <if test="logintimes != null">
        #{logintimes,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cyjr.model.TbUserExample" resultType="java.lang.Long">
    select count(*) from tb_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.role != null">
        role = #{record.role,jdbcType=TINYINT},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=TINYINT},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.userNo != null">
        user_no = #{record.userNo,jdbcType=VARCHAR},
      </if>
      <if test="record.passwordHash != null">
        password_hash = #{record.passwordHash,jdbcType=VARCHAR},
      </if>
      <if test="record.passwordPayHash != null">
        password_pay_hash = #{record.passwordPayHash,jdbcType=VARCHAR},
      </if>
      <if test="record.passwordResetToken != null">
        password_reset_token = #{record.passwordResetToken,jdbcType=VARCHAR},
      </if>
      <if test="record.authKey != null">
        auth_key = #{record.authKey,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.realname != null">
        realname = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.idCard != null">
        id_card = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=TINYINT},
      </if>
      <if test="record.litpic != null">
        litpic = #{record.litpic,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=VARCHAR},
      </if>
      <if test="record.emailBindingStatus != null">
        email_binding_status = #{record.emailBindingStatus,jdbcType=TINYINT},
      </if>
      <if test="record.mobileBindingStatus != null">
        mobile_binding_status = #{record.mobileBindingStatus,jdbcType=TINYINT},
      </if>
      <if test="record.realVerifyStatus != null">
        real_verify_status = #{record.realVerifyStatus,jdbcType=TINYINT},
      </if>
      <if test="record.cardBindingStatus != null">
        card_binding_status = #{record.cardBindingStatus,jdbcType=TINYINT},
      </if>
      <if test="record.sinaOpenStatus != null">
        sina_open_status = #{record.sinaOpenStatus,jdbcType=INTEGER},
      </if>
      <if test="record.cardIdBase != null">
        card_id_base = #{record.cardIdBase,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=INTEGER},
      </if>
      <if test="record.lastLogintime != null">
        last_logintime = #{record.lastLogintime,jdbcType=INTEGER},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=INTEGER},
      </if>
      <if test="record.createdIp != null">
        created_ip = #{record.createdIp,jdbcType=VARCHAR},
      </if>
      <if test="record.inviteUserid != null">
        invite_userid = #{record.inviteUserid,jdbcType=INTEGER},
      </if>
      <if test="record.realVerifyTime != null">
        real_verify_time = #{record.realVerifyTime,jdbcType=INTEGER},
      </if>
      <if test="record.jsessionId != null">
        jsession_id = #{record.jsessionId,jdbcType=VARCHAR},
      </if>
      <if test="record.luckydrawLogin != null">
        luckydraw_login = #{record.luckydrawLogin,jdbcType=INTEGER},
      </if>
      <if test="record.luckydrawTender != null">
        luckydraw_tender = #{record.luckydrawTender,jdbcType=INTEGER},
      </if>
      <if test="record.logintimes != null">
        loginTimes = #{record.logintimes,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_user
    set id = #{record.id,jdbcType=INTEGER},
      role = #{record.role,jdbcType=TINYINT},
      user_type = #{record.userType,jdbcType=TINYINT},
      username = #{record.username,jdbcType=VARCHAR},
      user_no = #{record.userNo,jdbcType=VARCHAR},
      password_hash = #{record.passwordHash,jdbcType=VARCHAR},
      password_pay_hash = #{record.passwordPayHash,jdbcType=VARCHAR},
      password_reset_token = #{record.passwordResetToken,jdbcType=VARCHAR},
      auth_key = #{record.authKey,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      realname = #{record.realname,jdbcType=VARCHAR},
      id_card = #{record.idCard,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=TINYINT},
      litpic = #{record.litpic,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=VARCHAR},
      email_binding_status = #{record.emailBindingStatus,jdbcType=TINYINT},
      mobile_binding_status = #{record.mobileBindingStatus,jdbcType=TINYINT},
      real_verify_status = #{record.realVerifyStatus,jdbcType=TINYINT},
      card_binding_status = #{record.cardBindingStatus,jdbcType=TINYINT},
      sina_open_status = #{record.sinaOpenStatus,jdbcType=INTEGER},
      card_id_base = #{record.cardIdBase,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=INTEGER},
      last_logintime = #{record.lastLogintime,jdbcType=INTEGER},
      updated_at = #{record.updatedAt,jdbcType=INTEGER},
      created_ip = #{record.createdIp,jdbcType=VARCHAR},
      invite_userid = #{record.inviteUserid,jdbcType=INTEGER},
      real_verify_time = #{record.realVerifyTime,jdbcType=INTEGER},
      jsession_id = #{record.jsessionId,jdbcType=VARCHAR},
      luckydraw_login = #{record.luckydrawLogin,jdbcType=INTEGER},
      luckydraw_tender = #{record.luckydrawTender,jdbcType=INTEGER},
      loginTimes = #{record.logintimes,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cyjr.model.TbUser">
    update tb_user
    <set>
      <if test="role != null">
        role = #{role,jdbcType=TINYINT},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=TINYINT},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="userNo != null">
        user_no = #{userNo,jdbcType=VARCHAR},
      </if>
      <if test="passwordHash != null">
        password_hash = #{passwordHash,jdbcType=VARCHAR},
      </if>
      <if test="passwordPayHash != null">
        password_pay_hash = #{passwordPayHash,jdbcType=VARCHAR},
      </if>
      <if test="passwordResetToken != null">
        password_reset_token = #{passwordResetToken,jdbcType=VARCHAR},
      </if>
      <if test="authKey != null">
        auth_key = #{authKey,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="litpic != null">
        litpic = #{litpic,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="emailBindingStatus != null">
        email_binding_status = #{emailBindingStatus,jdbcType=TINYINT},
      </if>
      <if test="mobileBindingStatus != null">
        mobile_binding_status = #{mobileBindingStatus,jdbcType=TINYINT},
      </if>
      <if test="realVerifyStatus != null">
        real_verify_status = #{realVerifyStatus,jdbcType=TINYINT},
      </if>
      <if test="cardBindingStatus != null">
        card_binding_status = #{cardBindingStatus,jdbcType=TINYINT},
      </if>
      <if test="sinaOpenStatus != null">
        sina_open_status = #{sinaOpenStatus,jdbcType=INTEGER},
      </if>
      <if test="cardIdBase != null">
        card_id_base = #{cardIdBase,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=INTEGER},
      </if>
      <if test="lastLogintime != null">
        last_logintime = #{lastLogintime,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=INTEGER},
      </if>
      <if test="createdIp != null">
        created_ip = #{createdIp,jdbcType=VARCHAR},
      </if>
      <if test="inviteUserid != null">
        invite_userid = #{inviteUserid,jdbcType=INTEGER},
      </if>
      <if test="realVerifyTime != null">
        real_verify_time = #{realVerifyTime,jdbcType=INTEGER},
      </if>
      <if test="jsessionId != null">
        jsession_id = #{jsessionId,jdbcType=VARCHAR},
      </if>
      <if test="luckydrawLogin != null">
        luckydraw_login = #{luckydrawLogin,jdbcType=INTEGER},
      </if>
      <if test="luckydrawTender != null">
        luckydraw_tender = #{luckydrawTender,jdbcType=INTEGER},
      </if>
      <if test="logintimes != null">
        loginTimes = #{logintimes,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cyjr.model.TbUser">
    update tb_user
    set role = #{role,jdbcType=TINYINT},
      user_type = #{userType,jdbcType=TINYINT},
      username = #{username,jdbcType=VARCHAR},
      user_no = #{userNo,jdbcType=VARCHAR},
      password_hash = #{passwordHash,jdbcType=VARCHAR},
      password_pay_hash = #{passwordPayHash,jdbcType=VARCHAR},
      password_reset_token = #{passwordResetToken,jdbcType=VARCHAR},
      auth_key = #{authKey,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      litpic = #{litpic,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      email_binding_status = #{emailBindingStatus,jdbcType=TINYINT},
      mobile_binding_status = #{mobileBindingStatus,jdbcType=TINYINT},
      real_verify_status = #{realVerifyStatus,jdbcType=TINYINT},
      card_binding_status = #{cardBindingStatus,jdbcType=TINYINT},
      sina_open_status = #{sinaOpenStatus,jdbcType=INTEGER},
      card_id_base = #{cardIdBase,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=INTEGER},
      last_logintime = #{lastLogintime,jdbcType=INTEGER},
      updated_at = #{updatedAt,jdbcType=INTEGER},
      created_ip = #{createdIp,jdbcType=VARCHAR},
      invite_userid = #{inviteUserid,jdbcType=INTEGER},
      real_verify_time = #{realVerifyTime,jdbcType=INTEGER},
      jsession_id = #{jsessionId,jdbcType=VARCHAR},
      luckydraw_login = #{luckydrawLogin,jdbcType=INTEGER},
      luckydraw_tender = #{luckydrawTender,jdbcType=INTEGER},
      loginTimes = #{logintimes,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>